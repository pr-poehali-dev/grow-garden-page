import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Checkbox } from '@/components/ui/checkbox';
import Icon from '@/components/ui/icon';

interface Item {
  id: string;
  name: string;
  image: string;
  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';
  stock: number;
  price?: number;
  lastSeen?: string;
  chance?: number;
}

const Index = () => {
  const [trackedItems, setTrackedItems] = useState<string[]>([]);
  const [lastUpdate, setLastUpdate] = useState(new Date());

  const seedsData: Item[] = [
    { id: '1', name: '–ú–æ—Ä–∫–æ–≤–Ω—ã–µ —Å–µ–º–µ–Ω–∞', image: '/img/570fbe4c-43df-46a5-abc5-8942af703271.jpg', rarity: 'common', stock: 50, price: 10 },
    { id: '2', name: '–°–µ–º–µ–Ω–∞ —Ä–∞–¥—É–≥–∏', image: '/img/570fbe4c-43df-46a5-abc5-8942af703271.jpg', rarity: 'epic', stock: 3, price: 500 },
    { id: '3', name: '–ó–æ–ª–æ—Ç—ã–µ —Å–µ–º–µ–Ω–∞', image: '/img/570fbe4c-43df-46a5-abc5-8942af703271.jpg', rarity: 'legendary', stock: 0, price: 1000, lastSeen: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
  ];

  const toolsData: Item[] = [
    { id: '4', name: '–û–±—ã—á–Ω–∞—è –ª–æ–ø–∞—Ç–∞', image: '/img/7c5b26a1-fba4-4d46-aac2-df73f7298283.jpg', rarity: 'common', stock: 25, price: 50 },
    { id: '5', name: '–ê–ª–º–∞–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞', image: '/img/7c5b26a1-fba4-4d46-aac2-df73f7298283.jpg', rarity: 'rare', stock: 8, price: 200 },
    { id: '6', name: '–ú–∞–≥–∏—á–µ—Å–∫–∞—è –ª–æ–ø–∞—Ç–∞', image: '/img/7c5b26a1-fba4-4d46-aac2-df73f7298283.jpg', rarity: 'legendary', stock: 1, price: 800 },
  ];

  const eggsData: Item[] = [
    { id: '7', name: '–ö—É—Ä–∏–Ω–æ–µ —è–π—Ü–æ', image: '/img/3811f9a5-9b2b-43e3-b175-6a0da2a0d1b1.jpg', rarity: 'common', stock: 30, price: 25 },
    { id: '8', name: '–î—Ä–∞–∫–æ–Ω—å–µ —è–π—Ü–æ', image: '/img/3811f9a5-9b2b-43e3-b175-6a0da2a0d1b1.jpg', rarity: 'epic', stock: 2, price: 750 },
    { id: '9', name: '–§–µ–Ω–∏–∫—Å —è–π—Ü–æ', image: '/img/3811f9a5-9b2b-43e3-b175-6a0da2a0d1b1.jpg', rarity: 'legendary', stock: 0, price: 1500, lastSeen: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥' },
  ];

  const decorData: Item[] = [
    { id: '10', name: '–°–∞–¥–æ–≤—ã–π –≥–Ω–æ–º', image: '/img/570fbe4c-43df-46a5-abc5-8942af703271.jpg', rarity: 'uncommon', stock: 15, price: 75 },
    { id: '11', name: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω—Ç–∞–Ω', image: '/img/570fbe4c-43df-46a5-abc5-8942af703271.jpg', rarity: 'rare', stock: 5, price: 300 },
  ];

  const allItems = [...seedsData, ...toolsData, ...eggsData, ...decorData];

  const getRarityColor = (rarity: string) => {
    switch (rarity) {
      case 'common': return 'bg-rarity-common text-white';
      case 'uncommon': return 'bg-rarity-uncommon text-white';
      case 'rare': return 'bg-rarity-rare text-white';
      case 'epic': return 'bg-rarity-epic text-white';
      case 'legendary': return 'bg-rarity-legendary text-black';
      default: return 'bg-gray-500 text-white';
    }
  };

  const toggleTracking = (itemId: string) => {
    setTrackedItems(prev => 
      prev.includes(itemId) 
        ? prev.filter(id => id !== itemId)
        : [...prev, itemId]
    );
  };

  const rareItems = allItems.filter(item => ['rare', 'epic', 'legendary'].includes(item.rarity) && item.stock > 0);

  useEffect(() => {
    const interval = setInterval(() => {
      setLastUpdate(new Date());
    }, 5 * 60 * 1000);
    return () => clearInterval(interval);
  }, []);

  const ItemCard = ({ item, showTracking = false }: { item: Item, showTracking?: boolean }) => (
    <Card className="hover:shadow-lg transition-all duration-300 bg-white/90 backdrop-blur-sm border-2 border-game-orange/20">
      <CardContent className="p-4">
        <div className="flex items-center gap-3">
          <img src={item.image} alt={item.name} className="w-16 h-16 rounded-lg object-cover" />
          <div className="flex-1">
            <h3 className="font-semibold text-game-navy">{item.name}</h3>
            <Badge className={`${getRarityColor(item.rarity)} text-xs`}>
              {item.rarity}
            </Badge>
            {item.stock > 0 ? (
              <p className="text-sm text-green-600 font-medium">–í –Ω–∞–ª–∏—á–∏–∏: {item.stock}</p>
            ) : (
              <p className="text-sm text-red-500 font-medium">–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</p>
            )}
            {item.price && <p className="text-sm text-game-navy font-bold">${item.price}</p>}
            {item.lastSeen && <p className="text-xs text-gray-500">–í–∏–¥–µ–ª–∏: {item.lastSeen}</p>}
          </div>
          {showTracking && (
            <Checkbox 
              checked={trackedItems.includes(item.id)}
              onCheckedChange={() => toggleTracking(item.id)}
            />
          )}
        </div>
      </CardContent>
    </Card>
  );

  const CategorySection = ({ title, items, icon }: { title: string, items: Item[], icon: string }) => (
    <Card className="bg-white/80 backdrop-blur-sm border-2 border-game-orange/30">
      <CardHeader className="bg-gradient-to-r from-game-orange to-game-cyan text-white">
        <CardTitle className="flex items-center gap-2">
          <Icon name={icon} size={24} />
          {title}
        </CardTitle>
      </CardHeader>
      <CardContent className="p-4 space-y-3">
        {items.map(item => (
          <ItemCard key={item.id} item={item} />
        ))}
      </CardContent>
    </Card>
  );

  return (
    <div className="min-h-screen">
      {/* Header */}
      <header className="bg-gradient-to-r from-game-orange via-game-cyan to-game-purple shadow-lg sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <h1 className="text-3xl font-bold text-white">üå± GROW A GARDEN</h1>
              <span className="text-xl text-white/90">TRACKER</span>
            </div>
            <nav className="hidden md:flex gap-6">
              <Button variant="ghost" className="text-white hover:bg-white/20">–ì–ª–∞–≤–Ω–∞—è</Button>
              <Button variant="ghost" className="text-white hover:bg-white/20">–°—Ç–æ–∫</Button>
              <Button variant="ghost" className="text-white hover:bg-white/20">–ò—Å—Ç–æ—Ä–∏—è</Button>
              <Button variant="ghost" className="text-white hover:bg-white/20">–®–∞–Ω—Å—ã</Button>
            </nav>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-16 text-center">
        <div className="container mx-auto px-4">
          <h2 className="text-5xl font-bold text-game-navy mb-6 leading-tight">
            –û—Ç—Å–ª–µ–∂–∏–≤–∞–π —Ä–µ–¥–∫–∏–µ —Ç–æ–≤–∞—Ä—ã<br />
            <span className="text-game-orange">–≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏!</span>
          </h2>
          <p className="text-xl text-game-navy/80 mb-8 max-w-3xl mx-auto">
            –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–ø—É—Å–∫–∞–π —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã! –ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã 
            –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º —Ç–µ–±—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <Button size="lg" className="bg-game-orange hover:bg-game-orange/90 text-white font-bold text-lg px-8 py-4">
              <Icon name="Bell" className="mr-2" />
              –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </Button>
            <Card className="bg-game-cyan/20 border-game-cyan">
              <CardContent className="p-4">
                <p className="text-game-navy font-semibold">
                  üì± –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–¥–∫–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö –±–µ–∑ –ø–æ—Å–µ—â–µ–Ω–∏—è —Å–∞–π—Ç–∞
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Current Stock */}
      <section className="py-12 bg-white/50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-8">
            <h2 className="text-4xl font-bold text-game-navy mb-4">–¢–µ–∫—É—â–∏–π —Å—Ç–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤</h2>
            <p className="text-game-navy/70">–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {lastUpdate.toLocaleTimeString()}</p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <CategorySection title="–°–µ–º–µ–Ω–∞" items={seedsData} icon="Sprout" />
            <CategorySection title="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã" items={toolsData} icon="Wrench" />
            <CategorySection title="–Ø–π—Ü–∞" items={eggsData} icon="Egg" />
            <CategorySection title="–î–µ–∫–æ—Ä" items={decorData} icon="Sparkles" />
          </div>
        </div>
      </section>

      {/* Rare Items */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <h2 className="text-4xl font-bold text-game-navy text-center mb-8">üî• –†–µ–¥–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å—Ç–æ–∫–µ</h2>
          {rareItems.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {rareItems.map(item => (
                <ItemCard key={item.id} item={item} />
              ))}
            </div>
          ) : (
            <Card className="bg-gradient-to-r from-game-purple/20 to-game-orange/20 border-2 border-game-orange/30">
              <CardContent className="p-8 text-center">
                <h3 className="text-2xl font-bold text-game-navy mb-4">–°–µ–π—á–∞—Å –Ω–µ—Ç —Ä–µ–¥–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤</h3>
                <p className="text-game-navy/70 mb-4">–°—é–¥–∞ –ø–æ–ø–∞–¥–∞—é—Ç:</p>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-left">
                  <div>
                    <h4 className="font-semibold text-game-orange">–†–µ–¥–∫–∏–µ —Å–µ–º–µ–Ω–∞:</h4>
                    <ul className="text-sm text-game-navy/70">
                      <li>‚Ä¢ –°–µ–º–µ–Ω–∞ —Ä–∞–¥—É–≥–∏</li>
                      <li>‚Ä¢ –ó–æ–ª–æ—Ç—ã–µ —Å–µ–º–µ–Ω–∞</li>
                      <li>‚Ä¢ –ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–º–µ–Ω–∞</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold text-game-cyan">–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:</h4>
                    <ul className="text-sm text-game-navy/70">
                      <li>‚Ä¢ –ú–∞–≥–∏—á–µ—Å–∫–∞—è –ª–æ–ø–∞—Ç–∞</li>
                      <li>‚Ä¢ –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü—ã</li>
                      <li>‚Ä¢ –õ–µ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}
        </div>
      </section>

      {/* Tracking Section */}
      <section className="py-12 bg-white/50">
        <div className="container mx-auto px-4">
          <h2 className="text-4xl font-bold text-game-navy text-center mb-8">üìå –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–µ</h2>
          <div className="flex justify-center mb-6">
            <Dialog>
              <DialogTrigger asChild>
                <Button className="bg-game-orange hover:bg-game-orange/90 text-white font-bold">
                  <Icon name="Plus" className="mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                </Button>
              </DialogTrigger>
              <DialogContent className="max-w-4xl max-h-[80vh] overflow-auto">
                <DialogHeader>
                  <DialogTitle>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</DialogTitle>
                </DialogHeader>
                <Tabs defaultValue="seeds" className="w-full">
                  <TabsList className="grid w-full grid-cols-4">
                    <TabsTrigger value="seeds">–°–µ–º–µ–Ω–∞</TabsTrigger>
                    <TabsTrigger value="tools">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</TabsTrigger>
                    <TabsTrigger value="eggs">–Ø–π—Ü–∞</TabsTrigger>
                    <TabsTrigger value="decor">–î–µ–∫–æ—Ä</TabsTrigger>
                  </TabsList>
                  <TabsContent value="seeds" className="space-y-3">
                    {seedsData.map(item => <ItemCard key={item.id} item={item} showTracking />)}
                  </TabsContent>
                  <TabsContent value="tools" className="space-y-3">
                    {toolsData.map(item => <ItemCard key={item.id} item={item} showTracking />)}
                  </TabsContent>
                  <TabsContent value="eggs" className="space-y-3">
                    {eggsData.map(item => <ItemCard key={item.id} item={item} showTracking />)}
                  </TabsContent>
                  <TabsContent value="decor" className="space-y-3">
                    {decorData.map(item => <ItemCard key={item.id} item={item} showTracking />)}
                  </TabsContent>
                </Tabs>
              </DialogContent>
            </Dialog>
          </div>
          {trackedItems.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {trackedItems.map(itemId => {
                const item = allItems.find(i => i.id === itemId);
                return item ? <ItemCard key={item.id} item={item} /> : null;
              })}
            </div>
          ) : (
            <Card className="bg-white/80 border-2 border-dashed border-game-orange/50">
              <CardContent className="p-8 text-center">
                <Icon name="Eye" size={48} className="mx-auto mb-4 text-game-orange/50" />
                <p className="text-game-navy/70">–í—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</p>
              </CardContent>
            </Card>
          )}
        </div>
      </section>

      {/* History & Chances */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <Tabs defaultValue="history" className="w-full">
            <div className="text-center mb-8">
              <TabsList className="grid w-full max-w-md mx-auto grid-cols-2">
                <TabsTrigger value="history">üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ—è–≤–ª–µ–Ω–∏–π</TabsTrigger>
                <TabsTrigger value="chances">üé≤ –®–∞–Ω—Å—ã –ø–æ—è–≤–ª–µ–Ω–∏—è</TabsTrigger>
              </TabsList>
            </div>
            <TabsContent value="history">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-orange">–°–µ–º–µ–Ω–∞</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {seedsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <span className="text-sm text-gray-500">{item.lastSeen || '–í —Å—Ç–æ–∫–µ'}</span>
                      </div>
                    ))}
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-cyan">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {toolsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <span className="text-sm text-gray-500">{item.lastSeen || '–í —Å—Ç–æ–∫–µ'}</span>
                      </div>
                    ))}
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-purple">–Ø–π—Ü–∞</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {eggsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <span className="text-sm text-gray-500">{item.lastSeen || '–í —Å—Ç–æ–∫–µ'}</span>
                      </div>
                    ))}
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
            <TabsContent value="chances">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-orange">–°–µ–º–µ–Ω–∞</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {seedsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <Badge className={getRarityColor(item.rarity)}>
                          {item.rarity === 'common' ? '85%' : 
                           item.rarity === 'rare' ? '10%' : 
                           item.rarity === 'epic' ? '4%' : '1%'}
                        </Badge>
                      </div>
                    ))}
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-cyan">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {toolsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <Badge className={getRarityColor(item.rarity)}>
                          {item.rarity === 'common' ? '80%' : 
                           item.rarity === 'rare' ? '15%' : 
                           item.rarity === 'epic' ? '4%' : '1%'}
                        </Badge>
                      </div>
                    ))}
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader>
                    <CardTitle className="text-game-purple">–Ø–π—Ü–∞</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {eggsData.map(item => (
                      <div key={item.id} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                        <span className="font-medium">{item.name}</span>
                        <Badge className={getRarityColor(item.rarity)}>
                          {item.rarity === 'common' ? '70%' : 
                           item.rarity === 'rare' ? '20%' : 
                           item.rarity === 'epic' ? '8%' : '2%'}
                        </Badge>
                      </div>
                    ))}
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </section>

      {/* SEO Section */}
      <section className="py-12 bg-white/50">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <Card>
              <CardHeader>
                <CardTitle className="text-game-orange">–û Grow a Garden Tracker</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-game-navy/80">
                  Grow a Garden Tracker ‚Äî —ç—Ç–æ —Å–∞–º—ã–π —Ç–æ—á–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ 
                  –≤ –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –∏–≥—Ä–µ Roblox. –ú—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–º –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ 
                  —É–≤–µ–¥–æ–º–ª—è–µ–º –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Ä–µ–¥–∫–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-game-cyan">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–∏—Å–∞</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2 text-game-navy/80">
                  <li>‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç</li>
                  <li>‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ —Ä–µ–¥–∫–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö</li>
                  <li>‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ—è–≤–ª–µ–Ω–∏–π –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤</li>
                  <li>‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —à–∞–Ω—Å–æ–≤ –ø–æ—è–≤–ª–µ–Ω–∏—è</li>
                  <li>‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤</li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-game-navy text-white py-8">
        <div className="container mx-auto px-4 text-center">
          <h3 className="text-2xl font-bold mb-4">üå± GROW A GARDEN TRACKER</h3>
          <p className="text-white/70 mb-4">
            –°–∞–º—ã–π —Ç–æ—á–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è Grow a Garden –≤ Roblox
          </p>
          <div className="flex justify-center gap-4 mb-4">
            <Button variant="ghost" className="text-white hover:bg-white/20">
              <Icon name="MessageSquare" className="mr-2" />
              Telegram
            </Button>
            <Button variant="ghost" className="text-white hover:bg-white/20">
              <Icon name="Users" className="mr-2" />
              Discord
            </Button>
          </div>
          <p className="text-white/50 text-sm">
            ¬© 2024 Grow a Garden Tracker. –ù–µ —Å–≤—è–∑–∞–Ω —Å Roblox Corporation.
          </p>
        </div>
      </footer>
    </div>
  );
};

export default Index;